#!/bin/sh

#
# helpers
#

clean_symlink_tree() {
    if [ ! -d "$1" ]; then
	return
    fi
    dir="$1"; shift
    args=""
    while [ -n "$1" ]; do
	args="$args -a ! -name $1"; shift
    done
    findcmd="find $dir ! -type l -a ! -type d $args"
    if [ `$findcmd | wc -l` -ne 0 ]; then
	echo "tree $dir is dirty, aborting"
	exit 1
    fi
    rm -rf "$dir"
}

setup_no_symlinks() {
    impl="$1"; shift
    program="$1"; shift
    find systems -type f -name "*.sls" ! -path "*/_darcs/*" | $program "$@"
}

setup() {
    impl="$1"
    target_dir="targets/$impl"
    shift
    clean_symlink_tree "$target_dir" "*.slfasl"
    setup_no_symlinks $impl "$@" | while read source dest; do
	dest=`echo "$dest" | sed "s,^,$target_dir/,g"`
	mkdir -p `dirname "$dest"`
	if [ -L "$dest" ] && [ `readlink "$dest"` = "$source" ]; then
	    true # multiple include, that's ok
	elif [ -e "$dest" ]; then
	    echo "$dest already exists, cannot link to $source, aborting"
	    exit 1
	else
	    ln -s "$source" "$dest"
	fi
    done
}

#
# implementation specific routines
#

launch_ikarus() {
    setup "ikarus" "ikarus --r6rs-script scripts/setup.scm" symlinks ikarus
    if [ $# -eq 0 ]; then
	cd targets/ikarus && rlwrap ikarus
    elif [ "$1" == test ]; then
	shift
	test_file="../../systems/$1/tests/tests.scm"
	shift
	cd targets/ikarus && ikarus --r6rs-script ../../scripts/run-tests.sps "$test_file" "$@"
    else
	cd targets/ikarus && ikarus --r6rs-script "$@"
    fi
}

launch_larceny() {
    setup_cmd="larceny -r6rs -path . -program scripts/setup.scm"
    if [ $# -eq 0 ]; then
	setup larceny "$setup_cmd" -- symlinks larceny
	cd targets/larceny && rlwrap larceny -path . -err5rs
    elif [ "$1" = symlink ]; then
	setup larceny "$setup_cmd" -- symlinks larceny
    elif [ "$1" = compile ]; then
	setup larceny "$setup_cmd" -- symlinks larceny
	setup_no_symlinks larceny larceny -r6rs -path . -program scripts/setup.scm \
	    -- compile larceny targets/larceny
    elif [ "$1" = test ]; then
	shift
	test_file="../../systems/$1/tests/tests.scm"
	shift
	cd targets/larceny && larceny -r6rs -path . \
	    -program  ../../scripts/run-tests.sps -- "$test_file" "$@"
    elif [ "$1" = run ]; then
	shift
	if [ $# -eq 0 ]; then
	    cd targets/larceny && rlwrap larceny -path . -err5rs
	else
	    cd targets/larceny && larceny -path . -r6rs -program "$@"
	fi
    else
	cd targets/larceny && larceny -path . -r6rs -program "$@"
    fi
}

launch_mzscheme() {
    export PLTCOLLECTS="`pwd`/targets/mzscheme:$PLTCOLLECTS"
    setup "mzscheme" "mzscheme scripts/setup.scm" symlinks mzscheme
    if [ $# -eq 0 ]; then
	cd targets/mzscheme && rlwrap mzscheme -i -l errortrace
    elif [ "$1" == test ]; then
	shift
	test_file="../../systems/$1/tests/tests.scm"
	shift
	cd targets/mzscheme && mzscheme ../../scripts/run-tests.sps "$test_file" "$@"
    else
	cd targets/mzscheme && mzscheme "$@"
    fi
}

#
# main body follows
#

impl="$1"
if [ -z "$impl" ]; then
    echo "Usage: scripts/launch <impl> [<command> [<option> ...]]"
    exit 1
fi

case "$impl" in
    (ikarus|larceny|mzscheme)
	launch="launch_$impl"
	;;
    *) 
	echo "Unsupported implementation $impl; patches welcome"
	exit 1
	;;
esac
shift

set -e

$launch "$@"
