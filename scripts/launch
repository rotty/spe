#!/bin/sh

# launch --- A launcher script for several R6RS implementations

# Copyright (C) 2009, 2010, 2011, 2015 Andreas Rottmann <a.rottmann@gmx.at>

# This program is free software, you can redistribute it and/or
# modify it under the terms of the new-style BSD license.

# You should have received a copy of the BSD license along with this
# program. If not, see <http://www.debian.org/misc/bsd.license>.


#
# helpers
#

clean_symlink_tree() {
    if [ ! -d "$1" ]; then
        return
    fi
    find "$1" -depth \( -type l -o \( -type d -empty \) \) -delete
}

make_symlinks() {
    local dir="$1"; shift
    clean_symlink_tree "$dir"
    if ! command -v doro > /dev/null; then
        echo "ERROR: 'doro' command not found, please install dorodango."
        echo "See https://r0tty.org/software/dorodango/manual/#installation for details"
        exit 1
    fi
    doro --no-config symlink-bundle --force "$@" systems "$dir"
}

#
# main script
#

set -e

impl="$1"
if [ -z "$impl" ]; then
    echo "Usage: scripts/launch <impl> [<command> [<option> ...]]"
    exit 1
fi

if command -v rlwrap > /dev/null; then
    rlwrap=rlwrap
else
    rlwrap=""
fi

topdir="$(readlink -f $(dirname $0)/..)"

# A reasonable default
symlink="make_symlinks r6rs-libs"

# implementation specifics
impl="$1"; shift
case "$impl" in
    ikarus)
        export IKARUS_LIBRARY_PATH="${topdir}/r6rs-libs${IKARUS_LIBRARY_PATH:+:$IKARUS_LIBRARY_PATH}"
        run_r6rs_script="ikarus --r6rs-script"
        repl="$rlwrap ikarus"
        ;;
    mzscheme|racket)
        export PLTCOLLECTS=":${PLTCOLLECTS:+$PLTCOLLECTS:}${topdir}/plt-r6rs"
        run_r6rs_script="plt-r6rs"
        repl="$rlwrap racket -i"
        symlink="make_symlinks plt-r6rs --exclude srfi"
        ;;
    ypsilon)
        export YPSILON_SITELIB="${topdir}/r6rs-libs${YPSILON_SITELIB:+:$YPSILON_SITELIB}"
        run_r6rs_script="ypsilon --r6rs"
        repl="$rlwrap ypsilon"
        ;;
    larceny)
        run_r6rs_script="larceny -r6rs -path ${topdir}/r6rs-libs -program"
        repl="$rlwrap larceny -path ${topdir}/r6rs-libs -err5rs"
        ;;
    mosh)
        export MOSH_LOADPATH="${topdir}/r6rs-libs"
        run_r6rs_script="mosh"
        repl="$rlwrap mosh"
        ;;
    guile)
        export GUILE_LOAD_PATH="${topdir}/guile-r6rs${GUILE_LOAD_PATH:+:$GUILE_LOAD_PATH}"
        run_r6rs_script="guile -x .guile.sls -x .sls -s"
        repl="guile -x .guile.sls -x .sls"
        symlink="make_symlinks guile-r6rs --exclude srfi"
        ;;
    *)
        echo "ERROR: Unsupported implementation '$impl'; patches welcome ;-)"
        exit 1
        ;;
esac

if [ $# -eq 0 ]; then
    exec $repl
fi

exec_r6rs_script="exec $run_r6rs_script"

# command dispatcher

case "$1" in
    symlink)
        shift
        $symlink
        ;;
    build)
        shift
        $symlink
        $exec_r6rs_script scripts/build.sps "$@"
        ;;
    test)
        shift
        test_file="systems/$1/tests/tests.scm"
        shift
        $exec_r6rs_script scripts/run-tests.sps "$test_file" "$@"
        ;;
    pull)
        shift
        $run_r6rs_script systems/conjure/scripts/rcs42.sps pull "$@"
        $symlink
        $exec_r6rs_script scripts/build.sps
        ;;
    diff|list|push|inventory|status|fetch)
        $exec_r6rs_script systems/conjure/scripts/rcs42.sps "$@"
        ;;
    make-doc)
        rm -f doc/html/system-reference/*.*.html doc/html/system-reference/index.html
        $exec_r6rs_script systems/stexidoc/scripts/make-doc.sps \
            "SPE system reference" doc/html/system-reference systems/*/sys-def.scm
        ;;
    *)
        $exec_r6rs_script "$@"
        ;;
esac
