#!/bin/sh

#
# helpers
#

clean_symlink_tree() {
    if [ ! -d "$1" ]; then
	return
    fi
    dir="$1"; shift
    args=""
    while [ -n "$1" ]; do
	args="$args -a ! -name $1"; shift
    done
    findcmd="find $dir ! -type l -a ! -type d $args"
    if [ `$findcmd | wc -l` -ne 0 ]; then
        $findcmd
	echo "tree $dir is dirty, aborting"
	exit 1
    fi
    rm -rf "$dir"
    mkdir -p "$dir"
}

setup_no_symlinks() {
    impl="$1"; shift
    program="$1"; shift
    find systems -type f -name "*.sls" ! -path "*/_darcs/*" | $program "$@"
}

setup() {
    impl="$1"
    target_dir="targets/$impl"
    shift
    clean_symlink_tree "$target_dir" "*.slfasl" "*.ikarus-fasl" "*.dep" "*.zo"
    setup_no_symlinks $impl "$@" | while read source dest; do
	dest=`echo "$dest" | sed "s,^,$target_dir/,g"`
	mkdir -p `dirname "$dest"`
	if [ -L "$dest" ] && [ `readlink "$dest"` = "$source" ]; then
	    true # multiple include, that's ok
	elif [ -e "$dest" ]; then
	    echo "$dest already exists, cannot link to $source, aborting"
	    exit 1
	else
	    ln -s "$source" "$dest"
	fi
    done
}

#
# implementation specific routines
#

launch() {
    impl="$1"
    if [ -z "$impl" ]; then
        echo "Usage: scripts/launch <impl> [<command> [<option> ...]]"
        exit 1
    fi

    impl="$1"; shift
    case "$impl" in
        ikarus)
            export IKARUS_LIBRARY_PATH="$IKARUS_LIBRARY_PATH:`pwd`/targets/ikarus"
            run_r6rs_script="ikarus --r6rs-script"
            repl="rlwrap ikarus"
            ;;
        mzscheme)
            export PLTCOLLECTS=":$PLTCOLLECTS:`pwd`/targets/mzscheme:`pwd`"
            run_r6rs_script="mzscheme -l errortrace -u"
            repl="rlwrap mzscheme -i"
            ;;
        ypsilon)
            export YPSILON_SITELIB="`pwd`/targets/ypsilon:`pwd`:$YPSILON_SITELIB"
            run_r6rs_script="ypsilon --r6rs"
            repl="rlwrap ypsilon"
            ;;
        larceny)
            run_r6rs_script="larceny -r6rs -path targets/larceny -program"
            repl="rlwrap larceny -path targets/larceny -err5rs"
            ;;
        *)
            echo "Unsupported implementation '$impl'; patches welcome ;-)"
            exit 1
            ;;
    esac
    
    setup_cmd="$run_r6rs_script scripts/setup.scm"
    if [ $# -eq 0 ]; then
        $repl
    elif [ "$1" = symlink ]; then
	setup "$impl" "$setup_cmd" symlinks "$impl"
    elif [ "$1" = compile ]; then
	setup "$impl" "$setup_cmd" symlinks "$impl"
	setup_no_symlinks "$impl" "$setup_cmd" compile "$impl" targets/"$impl"
    elif [ "$1" = recompile ]; then
	setup_no_symlinks "$impl" "$setup_cmd" compile "$impl" targets/"$impl"
    elif [ "$1" = test ]; then
	shift
	test_file="systems/$1/tests/tests.scm"
	shift
	$run_r6rs_script scripts/run-tests.sps "$test_file" "$@"
    elif [ "$1" = make-doc ]; then
        rm -f doc/html/system-reference/*.*.html doc/html/system-reference/index.html
        $run_r6rs_script systems/stexidoc/scripts/make-doc.sps \
            "SPE system reference" doc/html/system-reference systems/*/sys-def.scm
    else
	$run_r6rs_script "$@"
    fi
}

set -e
launch "$@"
